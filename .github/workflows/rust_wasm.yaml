#
#  Copyright (c) Spudmash Media Pty Ltd
#  Licensed under the MIT License. See License.md in the project root for license information.
#
name: Rust WebAssembly

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always
  NPM_PUBLISH_CONFIG_URL: "https://npm.pkg.github.com"
  NPM_SCOPE: "spudmashmedia"

jobs:
  wasm_pack:
    runs-on: ubuntu-latest

    steps:
      - name: "[Setup Actions]"
        uses: actions/checkout@v2

      - name: "[Setup wasm-pack]"
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: "[Run Unit Test]"
        run: cargo test

      - name: "[Run Test - Headless Chrome]"
        run: wasm-pack test --headless --chrome

      - name: "[Run Test - Headless Firefox]"
        run: wasm-pack test --headless --firefox

      - name: "[wasm-pack build]"
        run: wasm-pack build --scope $NPM_SCOPE

      - name: "[Upload Artifacts to temp storage]"
        uses: actions/upload-artifact@v1
        with:
          name: wasm_output
          path: /home/runner/work/randu-core/randu-core/pkg

  npm_publish:
    runs-on: ubuntu-latest
    needs: wasm_pack
    strategy:
      matrix:
        node-version: [14.x] # no quotes on the node versions
    if: success() && github.ref == 'refs/heads/master'
    steps:
      - name: "[Download Artifacts from previous build step]"
        uses: actions/download-artifact@v1
        with:
          name: wasm_output

      - name: "[Setup Node ${{ matrix.node-version}}]"
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "${{ env.NPM_PUBLISH_CONFIG_URL }}"
          scope: "@${{ env.NPM_SCOPE }}"

      - name: "[NPM Publish to GitHub Packages (*note: navigate to package.json before running npm)]"
        run: cd wasm_output &&  npm publish --verbose
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
